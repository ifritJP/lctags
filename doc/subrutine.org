# -*- coding:utf-8 -*-
#+AUTHOR: ifritJP
#+STARTUP: nofold

#+TITLE: lctags を使って C/C++ ソースコードをリファクタリング(サブルーチン化)

コーディングしていると、関数が肥大化していくことが良くあります。

関数の肥大化は、メンテナンス性や可読性が落ちる原因になるため、
リファクタリングで関数内の処理を分割するサブルーチン化作業が必要です。

サブルーチン化作業はほとんど機械的に出来ますが、
分割する関数の前後処理に気をつけないと、バグってしまうこともあります。

そんなサブルーチン化作業を、 lctags を使うことで簡単に行なうことができます。

* 事前準備

lctags のサブルーチン化処理は、ブロック {} を対象としています。
よってブロックでない処理は、事前にブロック化しておく必要があります。
  
* 使用方法
  
emacs でソースファイルを開き、サブルーチン化したいブロックの先頭にカーソルを合せ、
次を実行します。
  
  M-x lctags-split-it

これにより、ブロック内の処理を解析してサブルーチンを生成し、
新しいバッファに生成したサブルーチンと、そのサブルーチンをコールするコードが
表示されます。

後は、この表示されたコードに置き換えればサブルーチン化作業が完了します。

* チュートリアル

** 準備

lctags の DB を作成し、次の内容のソースコードを登録しておきます。

#+BEGIN_SRC C
int func6( int val )
{
    type_t typ;
    if ( val == 0 ) {
        typ.val = 1;
        return 0;
    }
}
#+END_SRC

